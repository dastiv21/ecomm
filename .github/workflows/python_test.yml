name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      run: |
        python manage.py migrate --noinput

    - name: Run tests with coverage
      run: |
        python run_coverage.py
      continue-on-error: true  # Allow the workflow to continue even if the coverage script fails

    - name: Check test coverage
      run: |
        coverage_percentage=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); coverage = tree.getroot().find('coverage'); print(coverage.attrib['lines-covered'] / coverage.attrib['lines-valid'] * 100)")
        if (( $(echo "$coverage_percentage < 80" | bc -l) )); then
          echo "Coverage (${coverage_percentage}%) is below the minimum threshold (80%)."
          exit 1
        fi

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: push_reports/coverage_report.html

    - name: Notify code maintainer on failure
      if: failure()  # Run this step only if any previous step failed
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: your-slack-channel-name  # Replace with your Slack channel name
        SLACK_COLOR: '#ff0000'  # Red color for failure notifications
        SLACK_ICON: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        SLACK_MESSAGE: 'CI/CD workflow failed. Please check the logs for details.'
        SLACK_TITLE: 'CI/CD Workflow Failure'
        SLACK_USERNAME: GitHub Actions
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}  # Replace with your Slack webhook URL